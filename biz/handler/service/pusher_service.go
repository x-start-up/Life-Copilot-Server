// Code generated by hertz generator.

package service

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	service "github.com/x-start-up/Life-Copilot-Server/biz/model/service"
)

// GetAllPushers .
// @router /v1/api/pusher/get_all_pushers [GET]
func GetAllPushers(ctx context.Context, c *app.RequestContext) {
	var err error

	resp := new(service.GetAllPushersResp)

	c.JSON(200, resp)
}

// GetPusher .
// @router /v1/api/pusher/:pusher_id [GET]
func GetPusher(ctx context.Context, c *app.RequestContext) {
	var err error
	var req service.GetPusherReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(service.GetPusherResp)

	c.JSON(200, resp)
}

// CreatePusher .
// @router /v1/api/pusher [POST]
func CreatePusher(ctx context.Context, c *app.RequestContext) {
	var err error
	var req service.CreatePusherReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(service.CreatePusherResp)

	c.JSON(200, resp)
}

// UpdatePusher .
// @router /v1/api/pusher/:pusher_id [PUT]
func UpdatePusher(ctx context.Context, c *app.RequestContext) {
	var err error
	var req service.UpdatePusherReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(service.UpdatePusherResp)

	c.JSON(200, resp)
}

// DeletePusher .
// @router /v1/api/pusher/:pusher_id [DELETE]
func DeletePusher(ctx context.Context, c *app.RequestContext) {
	var err error
	var req service.DeletePusherReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(400, err.Error())
		return
	}

	resp := new(service.DeletePusherResp)

	c.JSON(200, resp)
}
